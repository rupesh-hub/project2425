server:
  port: 8989
  servlet:
    context-path: /api/v1.0.0

spring:
  application:
    name: chat-service


  datasource:
    url: jdbc:postgresql://localhost:5432/test_db
    username: postgres
    password: postgres
    driver-class-name: org.postgresql.Driver

  jpa:
    database: postgresql
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        use_sql_comments: true

  hibernate:
    naming:
      physical-strategy: org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
      implicit-strategy: org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy

#  kafka:
#    producer:
#      bootstrap-servers: localhost:9092
#      key-serializer: org.apache.common.serializer.StringSerializer
#      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
#      properties:
#        spring.json.type.mapping: paymentConfirmation:com.rentme.app.event.producer.PaymentConfirmationEvent
#
#    consumer:
#      bootstrap-servers: localhost:9092
#      group-id: payment-group,order-group
#      auto-offset-reset: earliest
#      key-deserializer: org.apache.common.serializer.StringSerializer
#      value-deserializer: org.springframework.kafka.support.serializer.JsonSerializer
#      properties:
#        spring.json.trusted.packages: '*'
#        spring.json.type.mapping: paymentConfirmation:com.rentme.app.event.producer.PaymentConfirmationEvent

logging:
  level:
    org:
      hibernate:
        SQL: debug
        type: trace
